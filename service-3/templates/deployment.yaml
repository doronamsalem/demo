apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "service-3.fullname" . }}
  labels:
    {{- include "service-3.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "service-3.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "service-3.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      serviceAccountName: {{ include "service-3.serviceAccountName" . }}
      volumes:
        - name: kafka-certificate
          secret:
            secretName: flight-secret
            optional: true
            items:
              - key: kafka_key
                path: kafka-key
              - key: kafka_certificate
                path: kafka-certificate
        {{- if .Values.privateCa.enabled }}
        - name: {{ include "service-3.fullname" . }}-trusted-ca
          configMap:
            name: {{ .Values.privateCa.name }}
            items:
            - key: ca-bundle.crt
              path: {{ .Values.privateCa.extraCaFile }}
        {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}{{.Values.image.baseFolder }}flight-dronamic:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          volumeMounts:
            - name: kafka-certificate
              mountPath: /app/config/kafka
              readOnly: true
            {{- if .Values.privateCa.enabled }}
            - name: {{ include "service-3.fullname" . }}-trusted-ca
              mountPath: {{ .Values.privateCa.mountPath }}{{ .Values.privateCa.extraCaFile }}
              subPath: {{ .Values.privateCa.extraCaFile }}
              readOnly: true
            {{- end }}
          envFrom:
          - configMapRef:
              name: {{ include "service-3.fullname" . }}-cm
          env:
          {{- if .Values.privateCa.enabled }}
            - name: NODE_EXTRA_CA_CERTS
              value: {{ .Values.privateCa.mountPath }}{{ .Values.privateCa.extraCaFile }}
          {{- end }}
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName | default "flight-secret" | quote }}
                  key: mongodb_user
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName | default "flight-secret" | quote }}
                  key: mongodb_password
            - name: REDISDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName | default "flight-secret" | quote }}
                  key: redisdb_password

          readinessProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /whoami
              port: http
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /whoami
              port: http
            failureThreshold: 9
            periodSeconds: 5

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
